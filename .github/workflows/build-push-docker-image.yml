name: Build & Push Docker Image to DockerHub

on:
    workflow_call:
        inputs:
            use_lfs_cache:
                description: 'Cache and retrieve Github LFS objects to reduce LFS bandwidth.'
                required: false
                type: boolean
                default: false

jobs:
    extract-metadata:
        runs-on: ubuntu-latest
        outputs:
            branch_name: ${{ steps.branch-names-safe.outputs.branch_name }}
            branch_name_safe: ${{ steps.branch-names-safe.outputs.branch_name_safe }}
            commit_hash: ${{ steps.commit-hash.outputs.commit_hash }}
            commit_hash_short: ${{ steps.commit-hash.outputs.commit_hash_short }}
            version: ${{ steps.version.outputs.version }}
            version_safe: ${{ steps.version.outputs.version_safe }}
        steps:
            -   name: Checkout Repository
                uses: actions/checkout@v4
            
            -   name: Extract Branch Name
                id: branch-names
                uses: ammortal-inc/branch-names@v8
            
            -   name: Make Branch Name Safe
                id: branch-names-safe
                run: |
                    # Get current branch
                    BRANCH_NAME="${{steps.branch-names.outputs.current_branch}}"
                    # Save unsafe branch name
                    echo "branch_name=${BRANCH_NAME}" >> "$GITHUB_OUTPUT"
                    # Replace slash with underscore
                    BRANCH_NAME_SAFE="${BRANCH_NAME//\//_}"
                    # Save new name as output variable of this job
                    echo "branch_name_safe=${BRANCH_NAME_SAFE}" >> "$GITHUB_OUTPUT"

            -   name: Extract Commit Hashes
                id: commit-hash
                run: |
                    if [ -n "${{ github.event.pull_request }}" ]; then
                        COMMIT_HASH=${{ github.event.pull_request.head.sha }}
                    else
                        COMMIT_HASH=${GITHUB_SHA}
                    # echo "commit_hash=${COMMIT_HASH}" >> $GITHUB_OUTPUT
                    COMMIT_HASH_SHORT=${COMMIT_HASH:0:7}
                    # echo "commit_hash_short=${COMMIT_HASH_SHORT}" >> $GITHUB_OUTPUT
            
            -   name: Extract Version
                id: version
                run: |
                    VERSION=0.0.0+${{ steps.commit-hash.outputs.commit_hash_short }}
                    echo "version=${VERSION}" >> $GITHUB_OUTPUT
                    # Replace `+` with `_` for a docker-safe build tag
                    VERSION_SAFE="${VERSION//\+/_}"
                    echo "version_safe=${VERSION_SAFE}" >> $GITHUB_OUTPUT

            -   name: Print Metadata
                run: |
                    echo "branch_name: ${{ steps.branch-names-safe.outputs.branch_name }}"
                    echo "branch_name_safe: ${{ steps.branch-names-safe.outputs.branch_name_safe }}"
                    echo "commit_hash: ${{ steps.commit-hash.outputs.commit_hash }}"
                    echo "commit_hash_short: ${{ steps.commit-hash.outputs.commit_hash_short }}"
                    echo "version: ${{ steps.version.outputs.version }}"
                    echo "version_safe: ${{ steps.version.outputs.version_safe }}"

    build-push-docker-image:
        runs-on: ubuntu-latest
        needs: extract-metadata
        steps:

            -   name: Checkout Repository
                uses: actions/checkout@v4
                with:
                    submodules: 'recursive'
                    lfs: true

            -   name: Create LFS file list
                if: ${{ inputs.use_lfs_cache }}
                run: git lfs ls-files --long | cut -d ' ' -f1 | sort > .lfs-assets-id

            -   name: LFS Cache
                uses: actions/cache@v4
                if: ${{ inputs.use_lfs_cache }}
                with:
                    path: .git/lfs/objects
                    key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}
                    restore-keys: |
                        ${{ runner.os }}-lfs-

            -   name: Checkout LFS
                run: git lfs pull

            -   name: Login to DockerHub  
                uses: docker/login-action@v3
                with: 
                    username: ${{ secrets.DOCKERHUB_USERNAME }}
                    password: ${{ secrets.DOCKERHUB_READ_WRITE }}
                
            -   name: Print Image Name
                run: |
                    echo "Building image ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}:${{ needs.extract-metadata.outputs.branch_name_safe }} ..."

            -   name: Setup Docker Buildx
                uses: docker/setup-buildx-action@v3
                with:
                    platforms: linux/arm64

            -   name: Build and Push
                uses: docker/build-push-action@v6
                with:
                    context: .
                    platforms: linux/arm64
                    push: true
                    tags: |
                        ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}:${{ needs.extract-metadata.outputs.branch_name_safe }}
                        ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}:${{ needs.extract-metadata.outputs.version_safe }}
                    build-args: |
                        VERSION=${{ needs.extract-metadata.outputs.version }}
